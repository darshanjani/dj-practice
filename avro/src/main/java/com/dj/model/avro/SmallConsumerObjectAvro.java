/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.dj.model.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class SmallConsumerObjectAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 7219850298997692926L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SmallConsumerObjectAvro\",\"namespace\":\"com.dj.model.avro\",\"fields\":[{\"name\":\"contextId\",\"type\":\"string\"},{\"name\":\"recordNum\",\"type\":\"int\"},{\"name\":\"var1\",\"type\":\"int\"},{\"name\":\"var2\",\"type\":\"boolean\"},{\"name\":\"var3\",\"type\":\"double\"},{\"name\":\"var4\",\"type\":\"double\"},{\"name\":\"var5\",\"type\":\"float\"},{\"name\":\"var6\",\"type\":\"int\"},{\"name\":\"var7\",\"type\":\"int\"},{\"name\":\"var8\",\"type\":\"string\"},{\"name\":\"var9\",\"type\":\"string\"},{\"name\":\"var10\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<SmallConsumerObjectAvro> ENCODER =
      new BinaryMessageEncoder<SmallConsumerObjectAvro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<SmallConsumerObjectAvro> DECODER =
      new BinaryMessageDecoder<SmallConsumerObjectAvro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<SmallConsumerObjectAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<SmallConsumerObjectAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<SmallConsumerObjectAvro>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this SmallConsumerObjectAvro to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a SmallConsumerObjectAvro from a ByteBuffer. */
  public static SmallConsumerObjectAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence contextId;
   private int recordNum;
   private int var1;
   private boolean var2;
   private double var3;
   private double var4;
   private float var5;
   private int var6;
   private int var7;
   private java.lang.CharSequence var8;
   private java.lang.CharSequence var9;
   private int var10;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public SmallConsumerObjectAvro() {}

  /**
   * All-args constructor.
   * @param contextId The new value for contextId
   * @param recordNum The new value for recordNum
   * @param var1 The new value for var1
   * @param var2 The new value for var2
   * @param var3 The new value for var3
   * @param var4 The new value for var4
   * @param var5 The new value for var5
   * @param var6 The new value for var6
   * @param var7 The new value for var7
   * @param var8 The new value for var8
   * @param var9 The new value for var9
   * @param var10 The new value for var10
   */
  public SmallConsumerObjectAvro(java.lang.CharSequence contextId, java.lang.Integer recordNum, java.lang.Integer var1, java.lang.Boolean var2, java.lang.Double var3, java.lang.Double var4, java.lang.Float var5, java.lang.Integer var6, java.lang.Integer var7, java.lang.CharSequence var8, java.lang.CharSequence var9, java.lang.Integer var10) {
    this.contextId = contextId;
    this.recordNum = recordNum;
    this.var1 = var1;
    this.var2 = var2;
    this.var3 = var3;
    this.var4 = var4;
    this.var5 = var5;
    this.var6 = var6;
    this.var7 = var7;
    this.var8 = var8;
    this.var9 = var9;
    this.var10 = var10;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return contextId;
    case 1: return recordNum;
    case 2: return var1;
    case 3: return var2;
    case 4: return var3;
    case 5: return var4;
    case 6: return var5;
    case 7: return var6;
    case 8: return var7;
    case 9: return var8;
    case 10: return var9;
    case 11: return var10;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: contextId = (java.lang.CharSequence)value$; break;
    case 1: recordNum = (java.lang.Integer)value$; break;
    case 2: var1 = (java.lang.Integer)value$; break;
    case 3: var2 = (java.lang.Boolean)value$; break;
    case 4: var3 = (java.lang.Double)value$; break;
    case 5: var4 = (java.lang.Double)value$; break;
    case 6: var5 = (java.lang.Float)value$; break;
    case 7: var6 = (java.lang.Integer)value$; break;
    case 8: var7 = (java.lang.Integer)value$; break;
    case 9: var8 = (java.lang.CharSequence)value$; break;
    case 10: var9 = (java.lang.CharSequence)value$; break;
    case 11: var10 = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'contextId' field.
   * @return The value of the 'contextId' field.
   */
  public java.lang.CharSequence getContextId() {
    return contextId;
  }

  /**
   * Sets the value of the 'contextId' field.
   * @param value the value to set.
   */
  public void setContextId(java.lang.CharSequence value) {
    this.contextId = value;
  }

  /**
   * Gets the value of the 'recordNum' field.
   * @return The value of the 'recordNum' field.
   */
  public java.lang.Integer getRecordNum() {
    return recordNum;
  }

  /**
   * Sets the value of the 'recordNum' field.
   * @param value the value to set.
   */
  public void setRecordNum(java.lang.Integer value) {
    this.recordNum = value;
  }

  /**
   * Gets the value of the 'var1' field.
   * @return The value of the 'var1' field.
   */
  public java.lang.Integer getVar1() {
    return var1;
  }

  /**
   * Sets the value of the 'var1' field.
   * @param value the value to set.
   */
  public void setVar1(java.lang.Integer value) {
    this.var1 = value;
  }

  /**
   * Gets the value of the 'var2' field.
   * @return The value of the 'var2' field.
   */
  public java.lang.Boolean getVar2() {
    return var2;
  }

  /**
   * Sets the value of the 'var2' field.
   * @param value the value to set.
   */
  public void setVar2(java.lang.Boolean value) {
    this.var2 = value;
  }

  /**
   * Gets the value of the 'var3' field.
   * @return The value of the 'var3' field.
   */
  public java.lang.Double getVar3() {
    return var3;
  }

  /**
   * Sets the value of the 'var3' field.
   * @param value the value to set.
   */
  public void setVar3(java.lang.Double value) {
    this.var3 = value;
  }

  /**
   * Gets the value of the 'var4' field.
   * @return The value of the 'var4' field.
   */
  public java.lang.Double getVar4() {
    return var4;
  }

  /**
   * Sets the value of the 'var4' field.
   * @param value the value to set.
   */
  public void setVar4(java.lang.Double value) {
    this.var4 = value;
  }

  /**
   * Gets the value of the 'var5' field.
   * @return The value of the 'var5' field.
   */
  public java.lang.Float getVar5() {
    return var5;
  }

  /**
   * Sets the value of the 'var5' field.
   * @param value the value to set.
   */
  public void setVar5(java.lang.Float value) {
    this.var5 = value;
  }

  /**
   * Gets the value of the 'var6' field.
   * @return The value of the 'var6' field.
   */
  public java.lang.Integer getVar6() {
    return var6;
  }

  /**
   * Sets the value of the 'var6' field.
   * @param value the value to set.
   */
  public void setVar6(java.lang.Integer value) {
    this.var6 = value;
  }

  /**
   * Gets the value of the 'var7' field.
   * @return The value of the 'var7' field.
   */
  public java.lang.Integer getVar7() {
    return var7;
  }

  /**
   * Sets the value of the 'var7' field.
   * @param value the value to set.
   */
  public void setVar7(java.lang.Integer value) {
    this.var7 = value;
  }

  /**
   * Gets the value of the 'var8' field.
   * @return The value of the 'var8' field.
   */
  public java.lang.CharSequence getVar8() {
    return var8;
  }

  /**
   * Sets the value of the 'var8' field.
   * @param value the value to set.
   */
  public void setVar8(java.lang.CharSequence value) {
    this.var8 = value;
  }

  /**
   * Gets the value of the 'var9' field.
   * @return The value of the 'var9' field.
   */
  public java.lang.CharSequence getVar9() {
    return var9;
  }

  /**
   * Sets the value of the 'var9' field.
   * @param value the value to set.
   */
  public void setVar9(java.lang.CharSequence value) {
    this.var9 = value;
  }

  /**
   * Gets the value of the 'var10' field.
   * @return The value of the 'var10' field.
   */
  public java.lang.Integer getVar10() {
    return var10;
  }

  /**
   * Sets the value of the 'var10' field.
   * @param value the value to set.
   */
  public void setVar10(java.lang.Integer value) {
    this.var10 = value;
  }

  /**
   * Creates a new SmallConsumerObjectAvro RecordBuilder.
   * @return A new SmallConsumerObjectAvro RecordBuilder
   */
  public static com.dj.model.avro.SmallConsumerObjectAvro.Builder newBuilder() {
    return new com.dj.model.avro.SmallConsumerObjectAvro.Builder();
  }

  /**
   * Creates a new SmallConsumerObjectAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new SmallConsumerObjectAvro RecordBuilder
   */
  public static com.dj.model.avro.SmallConsumerObjectAvro.Builder newBuilder(com.dj.model.avro.SmallConsumerObjectAvro.Builder other) {
    return new com.dj.model.avro.SmallConsumerObjectAvro.Builder(other);
  }

  /**
   * Creates a new SmallConsumerObjectAvro RecordBuilder by copying an existing SmallConsumerObjectAvro instance.
   * @param other The existing instance to copy.
   * @return A new SmallConsumerObjectAvro RecordBuilder
   */
  public static com.dj.model.avro.SmallConsumerObjectAvro.Builder newBuilder(com.dj.model.avro.SmallConsumerObjectAvro other) {
    return new com.dj.model.avro.SmallConsumerObjectAvro.Builder(other);
  }

  /**
   * RecordBuilder for SmallConsumerObjectAvro instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SmallConsumerObjectAvro>
    implements org.apache.avro.data.RecordBuilder<SmallConsumerObjectAvro> {

    private java.lang.CharSequence contextId;
    private int recordNum;
    private int var1;
    private boolean var2;
    private double var3;
    private double var4;
    private float var5;
    private int var6;
    private int var7;
    private java.lang.CharSequence var8;
    private java.lang.CharSequence var9;
    private int var10;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.dj.model.avro.SmallConsumerObjectAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.contextId)) {
        this.contextId = data().deepCopy(fields()[0].schema(), other.contextId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.recordNum)) {
        this.recordNum = data().deepCopy(fields()[1].schema(), other.recordNum);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.var1)) {
        this.var1 = data().deepCopy(fields()[2].schema(), other.var1);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.var2)) {
        this.var2 = data().deepCopy(fields()[3].schema(), other.var2);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.var3)) {
        this.var3 = data().deepCopy(fields()[4].schema(), other.var3);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.var4)) {
        this.var4 = data().deepCopy(fields()[5].schema(), other.var4);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.var5)) {
        this.var5 = data().deepCopy(fields()[6].schema(), other.var5);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.var6)) {
        this.var6 = data().deepCopy(fields()[7].schema(), other.var6);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.var7)) {
        this.var7 = data().deepCopy(fields()[8].schema(), other.var7);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.var8)) {
        this.var8 = data().deepCopy(fields()[9].schema(), other.var8);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.var9)) {
        this.var9 = data().deepCopy(fields()[10].schema(), other.var9);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.var10)) {
        this.var10 = data().deepCopy(fields()[11].schema(), other.var10);
        fieldSetFlags()[11] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing SmallConsumerObjectAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(com.dj.model.avro.SmallConsumerObjectAvro other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.contextId)) {
        this.contextId = data().deepCopy(fields()[0].schema(), other.contextId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.recordNum)) {
        this.recordNum = data().deepCopy(fields()[1].schema(), other.recordNum);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.var1)) {
        this.var1 = data().deepCopy(fields()[2].schema(), other.var1);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.var2)) {
        this.var2 = data().deepCopy(fields()[3].schema(), other.var2);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.var3)) {
        this.var3 = data().deepCopy(fields()[4].schema(), other.var3);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.var4)) {
        this.var4 = data().deepCopy(fields()[5].schema(), other.var4);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.var5)) {
        this.var5 = data().deepCopy(fields()[6].schema(), other.var5);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.var6)) {
        this.var6 = data().deepCopy(fields()[7].schema(), other.var6);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.var7)) {
        this.var7 = data().deepCopy(fields()[8].schema(), other.var7);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.var8)) {
        this.var8 = data().deepCopy(fields()[9].schema(), other.var8);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.var9)) {
        this.var9 = data().deepCopy(fields()[10].schema(), other.var9);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.var10)) {
        this.var10 = data().deepCopy(fields()[11].schema(), other.var10);
        fieldSetFlags()[11] = true;
      }
    }

    /**
      * Gets the value of the 'contextId' field.
      * @return The value.
      */
    public java.lang.CharSequence getContextId() {
      return contextId;
    }

    /**
      * Sets the value of the 'contextId' field.
      * @param value The value of 'contextId'.
      * @return This builder.
      */
    public com.dj.model.avro.SmallConsumerObjectAvro.Builder setContextId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.contextId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'contextId' field has been set.
      * @return True if the 'contextId' field has been set, false otherwise.
      */
    public boolean hasContextId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'contextId' field.
      * @return This builder.
      */
    public com.dj.model.avro.SmallConsumerObjectAvro.Builder clearContextId() {
      contextId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'recordNum' field.
      * @return The value.
      */
    public java.lang.Integer getRecordNum() {
      return recordNum;
    }

    /**
      * Sets the value of the 'recordNum' field.
      * @param value The value of 'recordNum'.
      * @return This builder.
      */
    public com.dj.model.avro.SmallConsumerObjectAvro.Builder setRecordNum(int value) {
      validate(fields()[1], value);
      this.recordNum = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'recordNum' field has been set.
      * @return True if the 'recordNum' field has been set, false otherwise.
      */
    public boolean hasRecordNum() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'recordNum' field.
      * @return This builder.
      */
    public com.dj.model.avro.SmallConsumerObjectAvro.Builder clearRecordNum() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'var1' field.
      * @return The value.
      */
    public java.lang.Integer getVar1() {
      return var1;
    }

    /**
      * Sets the value of the 'var1' field.
      * @param value The value of 'var1'.
      * @return This builder.
      */
    public com.dj.model.avro.SmallConsumerObjectAvro.Builder setVar1(int value) {
      validate(fields()[2], value);
      this.var1 = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'var1' field has been set.
      * @return True if the 'var1' field has been set, false otherwise.
      */
    public boolean hasVar1() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'var1' field.
      * @return This builder.
      */
    public com.dj.model.avro.SmallConsumerObjectAvro.Builder clearVar1() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'var2' field.
      * @return The value.
      */
    public java.lang.Boolean getVar2() {
      return var2;
    }

    /**
      * Sets the value of the 'var2' field.
      * @param value The value of 'var2'.
      * @return This builder.
      */
    public com.dj.model.avro.SmallConsumerObjectAvro.Builder setVar2(boolean value) {
      validate(fields()[3], value);
      this.var2 = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'var2' field has been set.
      * @return True if the 'var2' field has been set, false otherwise.
      */
    public boolean hasVar2() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'var2' field.
      * @return This builder.
      */
    public com.dj.model.avro.SmallConsumerObjectAvro.Builder clearVar2() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'var3' field.
      * @return The value.
      */
    public java.lang.Double getVar3() {
      return var3;
    }

    /**
      * Sets the value of the 'var3' field.
      * @param value The value of 'var3'.
      * @return This builder.
      */
    public com.dj.model.avro.SmallConsumerObjectAvro.Builder setVar3(double value) {
      validate(fields()[4], value);
      this.var3 = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'var3' field has been set.
      * @return True if the 'var3' field has been set, false otherwise.
      */
    public boolean hasVar3() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'var3' field.
      * @return This builder.
      */
    public com.dj.model.avro.SmallConsumerObjectAvro.Builder clearVar3() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'var4' field.
      * @return The value.
      */
    public java.lang.Double getVar4() {
      return var4;
    }

    /**
      * Sets the value of the 'var4' field.
      * @param value The value of 'var4'.
      * @return This builder.
      */
    public com.dj.model.avro.SmallConsumerObjectAvro.Builder setVar4(double value) {
      validate(fields()[5], value);
      this.var4 = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'var4' field has been set.
      * @return True if the 'var4' field has been set, false otherwise.
      */
    public boolean hasVar4() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'var4' field.
      * @return This builder.
      */
    public com.dj.model.avro.SmallConsumerObjectAvro.Builder clearVar4() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'var5' field.
      * @return The value.
      */
    public java.lang.Float getVar5() {
      return var5;
    }

    /**
      * Sets the value of the 'var5' field.
      * @param value The value of 'var5'.
      * @return This builder.
      */
    public com.dj.model.avro.SmallConsumerObjectAvro.Builder setVar5(float value) {
      validate(fields()[6], value);
      this.var5 = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'var5' field has been set.
      * @return True if the 'var5' field has been set, false otherwise.
      */
    public boolean hasVar5() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'var5' field.
      * @return This builder.
      */
    public com.dj.model.avro.SmallConsumerObjectAvro.Builder clearVar5() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'var6' field.
      * @return The value.
      */
    public java.lang.Integer getVar6() {
      return var6;
    }

    /**
      * Sets the value of the 'var6' field.
      * @param value The value of 'var6'.
      * @return This builder.
      */
    public com.dj.model.avro.SmallConsumerObjectAvro.Builder setVar6(int value) {
      validate(fields()[7], value);
      this.var6 = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'var6' field has been set.
      * @return True if the 'var6' field has been set, false otherwise.
      */
    public boolean hasVar6() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'var6' field.
      * @return This builder.
      */
    public com.dj.model.avro.SmallConsumerObjectAvro.Builder clearVar6() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'var7' field.
      * @return The value.
      */
    public java.lang.Integer getVar7() {
      return var7;
    }

    /**
      * Sets the value of the 'var7' field.
      * @param value The value of 'var7'.
      * @return This builder.
      */
    public com.dj.model.avro.SmallConsumerObjectAvro.Builder setVar7(int value) {
      validate(fields()[8], value);
      this.var7 = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'var7' field has been set.
      * @return True if the 'var7' field has been set, false otherwise.
      */
    public boolean hasVar7() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'var7' field.
      * @return This builder.
      */
    public com.dj.model.avro.SmallConsumerObjectAvro.Builder clearVar7() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'var8' field.
      * @return The value.
      */
    public java.lang.CharSequence getVar8() {
      return var8;
    }

    /**
      * Sets the value of the 'var8' field.
      * @param value The value of 'var8'.
      * @return This builder.
      */
    public com.dj.model.avro.SmallConsumerObjectAvro.Builder setVar8(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.var8 = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'var8' field has been set.
      * @return True if the 'var8' field has been set, false otherwise.
      */
    public boolean hasVar8() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'var8' field.
      * @return This builder.
      */
    public com.dj.model.avro.SmallConsumerObjectAvro.Builder clearVar8() {
      var8 = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'var9' field.
      * @return The value.
      */
    public java.lang.CharSequence getVar9() {
      return var9;
    }

    /**
      * Sets the value of the 'var9' field.
      * @param value The value of 'var9'.
      * @return This builder.
      */
    public com.dj.model.avro.SmallConsumerObjectAvro.Builder setVar9(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.var9 = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'var9' field has been set.
      * @return True if the 'var9' field has been set, false otherwise.
      */
    public boolean hasVar9() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'var9' field.
      * @return This builder.
      */
    public com.dj.model.avro.SmallConsumerObjectAvro.Builder clearVar9() {
      var9 = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'var10' field.
      * @return The value.
      */
    public java.lang.Integer getVar10() {
      return var10;
    }

    /**
      * Sets the value of the 'var10' field.
      * @param value The value of 'var10'.
      * @return This builder.
      */
    public com.dj.model.avro.SmallConsumerObjectAvro.Builder setVar10(int value) {
      validate(fields()[11], value);
      this.var10 = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'var10' field has been set.
      * @return True if the 'var10' field has been set, false otherwise.
      */
    public boolean hasVar10() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'var10' field.
      * @return This builder.
      */
    public com.dj.model.avro.SmallConsumerObjectAvro.Builder clearVar10() {
      fieldSetFlags()[11] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public SmallConsumerObjectAvro build() {
      try {
        SmallConsumerObjectAvro record = new SmallConsumerObjectAvro();
        record.contextId = fieldSetFlags()[0] ? this.contextId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.recordNum = fieldSetFlags()[1] ? this.recordNum : (java.lang.Integer) defaultValue(fields()[1]);
        record.var1 = fieldSetFlags()[2] ? this.var1 : (java.lang.Integer) defaultValue(fields()[2]);
        record.var2 = fieldSetFlags()[3] ? this.var2 : (java.lang.Boolean) defaultValue(fields()[3]);
        record.var3 = fieldSetFlags()[4] ? this.var3 : (java.lang.Double) defaultValue(fields()[4]);
        record.var4 = fieldSetFlags()[5] ? this.var4 : (java.lang.Double) defaultValue(fields()[5]);
        record.var5 = fieldSetFlags()[6] ? this.var5 : (java.lang.Float) defaultValue(fields()[6]);
        record.var6 = fieldSetFlags()[7] ? this.var6 : (java.lang.Integer) defaultValue(fields()[7]);
        record.var7 = fieldSetFlags()[8] ? this.var7 : (java.lang.Integer) defaultValue(fields()[8]);
        record.var8 = fieldSetFlags()[9] ? this.var8 : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.var9 = fieldSetFlags()[10] ? this.var9 : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.var10 = fieldSetFlags()[11] ? this.var10 : (java.lang.Integer) defaultValue(fields()[11]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<SmallConsumerObjectAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<SmallConsumerObjectAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<SmallConsumerObjectAvro>
    READER$ = (org.apache.avro.io.DatumReader<SmallConsumerObjectAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
