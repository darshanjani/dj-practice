/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.dj.model.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ActualAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7993310377565996178L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ActualAvro\",\"namespace\":\"com.dj.model.avro\",\"fields\":[{\"name\":\"act1\",\"type\":\"string\"},{\"name\":\"act2\",\"type\":\"string\"},{\"name\":\"act3\",\"type\":\"string\"},{\"name\":\"act4\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"composition\",\"type\":{\"type\":\"record\",\"name\":\"CompositionAvro\",\"fields\":[{\"name\":\"comp1\",\"type\":\"string\"},{\"name\":\"comp2\",\"type\":\"string\"}]}},{\"name\":\"compositions\",\"type\":{\"type\":\"array\",\"items\":\"CompositionAvro\"}},{\"name\":\"base1\",\"type\":\"string\"},{\"name\":\"base2\",\"type\":\"int\"},{\"name\":\"base3\",\"type\":\"long\"},{\"name\":\"base4\",\"type\":\"double\"},{\"name\":\"base5\",\"type\":\"float\"},{\"name\":\"base6\",\"type\":\"boolean\"},{\"name\":\"base7\",\"type\":\"int\"},{\"name\":\"base8\",\"type\":\"long\"},{\"name\":\"base9\",\"type\":\"float\"},{\"name\":\"base10\",\"type\":\"double\"},{\"name\":\"super1\",\"type\":\"string\"},{\"name\":\"super2\",\"type\":\"string\"},{\"name\":\"super3\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ActualAvro> ENCODER =
      new BinaryMessageEncoder<ActualAvro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ActualAvro> DECODER =
      new BinaryMessageDecoder<ActualAvro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<ActualAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<ActualAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ActualAvro>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this ActualAvro to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a ActualAvro from a ByteBuffer. */
  public static ActualAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence act1;
   private java.lang.CharSequence act2;
   private java.lang.CharSequence act3;
   private org.joda.time.DateTime act4;
   private com.dj.model.avro.CompositionAvro composition;
   private java.util.List<com.dj.model.avro.CompositionAvro> compositions;
   private java.lang.CharSequence base1;
   private int base2;
   private long base3;
   private double base4;
   private float base5;
   private boolean base6;
   private int base7;
   private long base8;
   private float base9;
   private double base10;
   private java.lang.CharSequence super1;
   private java.lang.CharSequence super2;
   private java.lang.CharSequence super3;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ActualAvro() {}

  /**
   * All-args constructor.
   * @param act1 The new value for act1
   * @param act2 The new value for act2
   * @param act3 The new value for act3
   * @param act4 The new value for act4
   * @param composition The new value for composition
   * @param compositions The new value for compositions
   * @param base1 The new value for base1
   * @param base2 The new value for base2
   * @param base3 The new value for base3
   * @param base4 The new value for base4
   * @param base5 The new value for base5
   * @param base6 The new value for base6
   * @param base7 The new value for base7
   * @param base8 The new value for base8
   * @param base9 The new value for base9
   * @param base10 The new value for base10
   * @param super1 The new value for super1
   * @param super2 The new value for super2
   * @param super3 The new value for super3
   */
  public ActualAvro(java.lang.CharSequence act1, java.lang.CharSequence act2, java.lang.CharSequence act3, org.joda.time.DateTime act4, com.dj.model.avro.CompositionAvro composition, java.util.List<com.dj.model.avro.CompositionAvro> compositions, java.lang.CharSequence base1, java.lang.Integer base2, java.lang.Long base3, java.lang.Double base4, java.lang.Float base5, java.lang.Boolean base6, java.lang.Integer base7, java.lang.Long base8, java.lang.Float base9, java.lang.Double base10, java.lang.CharSequence super1, java.lang.CharSequence super2, java.lang.CharSequence super3) {
    this.act1 = act1;
    this.act2 = act2;
    this.act3 = act3;
    this.act4 = act4;
    this.composition = composition;
    this.compositions = compositions;
    this.base1 = base1;
    this.base2 = base2;
    this.base3 = base3;
    this.base4 = base4;
    this.base5 = base5;
    this.base6 = base6;
    this.base7 = base7;
    this.base8 = base8;
    this.base9 = base9;
    this.base10 = base10;
    this.super1 = super1;
    this.super2 = super2;
    this.super3 = super3;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return act1;
    case 1: return act2;
    case 2: return act3;
    case 3: return act4;
    case 4: return composition;
    case 5: return compositions;
    case 6: return base1;
    case 7: return base2;
    case 8: return base3;
    case 9: return base4;
    case 10: return base5;
    case 11: return base6;
    case 12: return base7;
    case 13: return base8;
    case 14: return base9;
    case 15: return base10;
    case 16: return super1;
    case 17: return super2;
    case 18: return super3;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  protected static final org.apache.avro.data.TimeConversions.DateConversion DATE_CONVERSION = new org.apache.avro.data.TimeConversions.DateConversion();
  protected static final org.apache.avro.data.TimeConversions.TimeConversion TIME_CONVERSION = new org.apache.avro.data.TimeConversions.TimeConversion();
  protected static final org.apache.avro.data.TimeConversions.TimestampConversion TIMESTAMP_CONVERSION = new org.apache.avro.data.TimeConversions.TimestampConversion();
  protected static final org.apache.avro.Conversions.DecimalConversion DECIMAL_CONVERSION = new org.apache.avro.Conversions.DecimalConversion();

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      TIMESTAMP_CONVERSION,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: act1 = (java.lang.CharSequence)value$; break;
    case 1: act2 = (java.lang.CharSequence)value$; break;
    case 2: act3 = (java.lang.CharSequence)value$; break;
    case 3: act4 = (org.joda.time.DateTime)value$; break;
    case 4: composition = (com.dj.model.avro.CompositionAvro)value$; break;
    case 5: compositions = (java.util.List<com.dj.model.avro.CompositionAvro>)value$; break;
    case 6: base1 = (java.lang.CharSequence)value$; break;
    case 7: base2 = (java.lang.Integer)value$; break;
    case 8: base3 = (java.lang.Long)value$; break;
    case 9: base4 = (java.lang.Double)value$; break;
    case 10: base5 = (java.lang.Float)value$; break;
    case 11: base6 = (java.lang.Boolean)value$; break;
    case 12: base7 = (java.lang.Integer)value$; break;
    case 13: base8 = (java.lang.Long)value$; break;
    case 14: base9 = (java.lang.Float)value$; break;
    case 15: base10 = (java.lang.Double)value$; break;
    case 16: super1 = (java.lang.CharSequence)value$; break;
    case 17: super2 = (java.lang.CharSequence)value$; break;
    case 18: super3 = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'act1' field.
   * @return The value of the 'act1' field.
   */
  public java.lang.CharSequence getAct1() {
    return act1;
  }

  /**
   * Sets the value of the 'act1' field.
   * @param value the value to set.
   */
  public void setAct1(java.lang.CharSequence value) {
    this.act1 = value;
  }

  /**
   * Gets the value of the 'act2' field.
   * @return The value of the 'act2' field.
   */
  public java.lang.CharSequence getAct2() {
    return act2;
  }

  /**
   * Sets the value of the 'act2' field.
   * @param value the value to set.
   */
  public void setAct2(java.lang.CharSequence value) {
    this.act2 = value;
  }

  /**
   * Gets the value of the 'act3' field.
   * @return The value of the 'act3' field.
   */
  public java.lang.CharSequence getAct3() {
    return act3;
  }

  /**
   * Sets the value of the 'act3' field.
   * @param value the value to set.
   */
  public void setAct3(java.lang.CharSequence value) {
    this.act3 = value;
  }

  /**
   * Gets the value of the 'act4' field.
   * @return The value of the 'act4' field.
   */
  public org.joda.time.DateTime getAct4() {
    return act4;
  }

  /**
   * Sets the value of the 'act4' field.
   * @param value the value to set.
   */
  public void setAct4(org.joda.time.DateTime value) {
    this.act4 = value;
  }

  /**
   * Gets the value of the 'composition' field.
   * @return The value of the 'composition' field.
   */
  public com.dj.model.avro.CompositionAvro getComposition() {
    return composition;
  }

  /**
   * Sets the value of the 'composition' field.
   * @param value the value to set.
   */
  public void setComposition(com.dj.model.avro.CompositionAvro value) {
    this.composition = value;
  }

  /**
   * Gets the value of the 'compositions' field.
   * @return The value of the 'compositions' field.
   */
  public java.util.List<com.dj.model.avro.CompositionAvro> getCompositions() {
    return compositions;
  }

  /**
   * Sets the value of the 'compositions' field.
   * @param value the value to set.
   */
  public void setCompositions(java.util.List<com.dj.model.avro.CompositionAvro> value) {
    this.compositions = value;
  }

  /**
   * Gets the value of the 'base1' field.
   * @return The value of the 'base1' field.
   */
  public java.lang.CharSequence getBase1() {
    return base1;
  }

  /**
   * Sets the value of the 'base1' field.
   * @param value the value to set.
   */
  public void setBase1(java.lang.CharSequence value) {
    this.base1 = value;
  }

  /**
   * Gets the value of the 'base2' field.
   * @return The value of the 'base2' field.
   */
  public java.lang.Integer getBase2() {
    return base2;
  }

  /**
   * Sets the value of the 'base2' field.
   * @param value the value to set.
   */
  public void setBase2(java.lang.Integer value) {
    this.base2 = value;
  }

  /**
   * Gets the value of the 'base3' field.
   * @return The value of the 'base3' field.
   */
  public java.lang.Long getBase3() {
    return base3;
  }

  /**
   * Sets the value of the 'base3' field.
   * @param value the value to set.
   */
  public void setBase3(java.lang.Long value) {
    this.base3 = value;
  }

  /**
   * Gets the value of the 'base4' field.
   * @return The value of the 'base4' field.
   */
  public java.lang.Double getBase4() {
    return base4;
  }

  /**
   * Sets the value of the 'base4' field.
   * @param value the value to set.
   */
  public void setBase4(java.lang.Double value) {
    this.base4 = value;
  }

  /**
   * Gets the value of the 'base5' field.
   * @return The value of the 'base5' field.
   */
  public java.lang.Float getBase5() {
    return base5;
  }

  /**
   * Sets the value of the 'base5' field.
   * @param value the value to set.
   */
  public void setBase5(java.lang.Float value) {
    this.base5 = value;
  }

  /**
   * Gets the value of the 'base6' field.
   * @return The value of the 'base6' field.
   */
  public java.lang.Boolean getBase6() {
    return base6;
  }

  /**
   * Sets the value of the 'base6' field.
   * @param value the value to set.
   */
  public void setBase6(java.lang.Boolean value) {
    this.base6 = value;
  }

  /**
   * Gets the value of the 'base7' field.
   * @return The value of the 'base7' field.
   */
  public java.lang.Integer getBase7() {
    return base7;
  }

  /**
   * Sets the value of the 'base7' field.
   * @param value the value to set.
   */
  public void setBase7(java.lang.Integer value) {
    this.base7 = value;
  }

  /**
   * Gets the value of the 'base8' field.
   * @return The value of the 'base8' field.
   */
  public java.lang.Long getBase8() {
    return base8;
  }

  /**
   * Sets the value of the 'base8' field.
   * @param value the value to set.
   */
  public void setBase8(java.lang.Long value) {
    this.base8 = value;
  }

  /**
   * Gets the value of the 'base9' field.
   * @return The value of the 'base9' field.
   */
  public java.lang.Float getBase9() {
    return base9;
  }

  /**
   * Sets the value of the 'base9' field.
   * @param value the value to set.
   */
  public void setBase9(java.lang.Float value) {
    this.base9 = value;
  }

  /**
   * Gets the value of the 'base10' field.
   * @return The value of the 'base10' field.
   */
  public java.lang.Double getBase10() {
    return base10;
  }

  /**
   * Sets the value of the 'base10' field.
   * @param value the value to set.
   */
  public void setBase10(java.lang.Double value) {
    this.base10 = value;
  }

  /**
   * Gets the value of the 'super1' field.
   * @return The value of the 'super1' field.
   */
  public java.lang.CharSequence getSuper1() {
    return super1;
  }

  /**
   * Sets the value of the 'super1' field.
   * @param value the value to set.
   */
  public void setSuper1(java.lang.CharSequence value) {
    this.super1 = value;
  }

  /**
   * Gets the value of the 'super2' field.
   * @return The value of the 'super2' field.
   */
  public java.lang.CharSequence getSuper2() {
    return super2;
  }

  /**
   * Sets the value of the 'super2' field.
   * @param value the value to set.
   */
  public void setSuper2(java.lang.CharSequence value) {
    this.super2 = value;
  }

  /**
   * Gets the value of the 'super3' field.
   * @return The value of the 'super3' field.
   */
  public java.lang.CharSequence getSuper3() {
    return super3;
  }

  /**
   * Sets the value of the 'super3' field.
   * @param value the value to set.
   */
  public void setSuper3(java.lang.CharSequence value) {
    this.super3 = value;
  }

  /**
   * Creates a new ActualAvro RecordBuilder.
   * @return A new ActualAvro RecordBuilder
   */
  public static com.dj.model.avro.ActualAvro.Builder newBuilder() {
    return new com.dj.model.avro.ActualAvro.Builder();
  }

  /**
   * Creates a new ActualAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ActualAvro RecordBuilder
   */
  public static com.dj.model.avro.ActualAvro.Builder newBuilder(com.dj.model.avro.ActualAvro.Builder other) {
    return new com.dj.model.avro.ActualAvro.Builder(other);
  }

  /**
   * Creates a new ActualAvro RecordBuilder by copying an existing ActualAvro instance.
   * @param other The existing instance to copy.
   * @return A new ActualAvro RecordBuilder
   */
  public static com.dj.model.avro.ActualAvro.Builder newBuilder(com.dj.model.avro.ActualAvro other) {
    return new com.dj.model.avro.ActualAvro.Builder(other);
  }

  /**
   * RecordBuilder for ActualAvro instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ActualAvro>
    implements org.apache.avro.data.RecordBuilder<ActualAvro> {

    private java.lang.CharSequence act1;
    private java.lang.CharSequence act2;
    private java.lang.CharSequence act3;
    private org.joda.time.DateTime act4;
    private com.dj.model.avro.CompositionAvro composition;
    private com.dj.model.avro.CompositionAvro.Builder compositionBuilder;
    private java.util.List<com.dj.model.avro.CompositionAvro> compositions;
    private java.lang.CharSequence base1;
    private int base2;
    private long base3;
    private double base4;
    private float base5;
    private boolean base6;
    private int base7;
    private long base8;
    private float base9;
    private double base10;
    private java.lang.CharSequence super1;
    private java.lang.CharSequence super2;
    private java.lang.CharSequence super3;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.dj.model.avro.ActualAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.act1)) {
        this.act1 = data().deepCopy(fields()[0].schema(), other.act1);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.act2)) {
        this.act2 = data().deepCopy(fields()[1].schema(), other.act2);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.act3)) {
        this.act3 = data().deepCopy(fields()[2].schema(), other.act3);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.act4)) {
        this.act4 = data().deepCopy(fields()[3].schema(), other.act4);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.composition)) {
        this.composition = data().deepCopy(fields()[4].schema(), other.composition);
        fieldSetFlags()[4] = true;
      }
      if (other.hasCompositionBuilder()) {
        this.compositionBuilder = com.dj.model.avro.CompositionAvro.newBuilder(other.getCompositionBuilder());
      }
      if (isValidValue(fields()[5], other.compositions)) {
        this.compositions = data().deepCopy(fields()[5].schema(), other.compositions);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.base1)) {
        this.base1 = data().deepCopy(fields()[6].schema(), other.base1);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.base2)) {
        this.base2 = data().deepCopy(fields()[7].schema(), other.base2);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.base3)) {
        this.base3 = data().deepCopy(fields()[8].schema(), other.base3);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.base4)) {
        this.base4 = data().deepCopy(fields()[9].schema(), other.base4);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.base5)) {
        this.base5 = data().deepCopy(fields()[10].schema(), other.base5);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.base6)) {
        this.base6 = data().deepCopy(fields()[11].schema(), other.base6);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.base7)) {
        this.base7 = data().deepCopy(fields()[12].schema(), other.base7);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.base8)) {
        this.base8 = data().deepCopy(fields()[13].schema(), other.base8);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.base9)) {
        this.base9 = data().deepCopy(fields()[14].schema(), other.base9);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.base10)) {
        this.base10 = data().deepCopy(fields()[15].schema(), other.base10);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.super1)) {
        this.super1 = data().deepCopy(fields()[16].schema(), other.super1);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.super2)) {
        this.super2 = data().deepCopy(fields()[17].schema(), other.super2);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.super3)) {
        this.super3 = data().deepCopy(fields()[18].schema(), other.super3);
        fieldSetFlags()[18] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing ActualAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(com.dj.model.avro.ActualAvro other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.act1)) {
        this.act1 = data().deepCopy(fields()[0].schema(), other.act1);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.act2)) {
        this.act2 = data().deepCopy(fields()[1].schema(), other.act2);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.act3)) {
        this.act3 = data().deepCopy(fields()[2].schema(), other.act3);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.act4)) {
        this.act4 = data().deepCopy(fields()[3].schema(), other.act4);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.composition)) {
        this.composition = data().deepCopy(fields()[4].schema(), other.composition);
        fieldSetFlags()[4] = true;
      }
      this.compositionBuilder = null;
      if (isValidValue(fields()[5], other.compositions)) {
        this.compositions = data().deepCopy(fields()[5].schema(), other.compositions);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.base1)) {
        this.base1 = data().deepCopy(fields()[6].schema(), other.base1);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.base2)) {
        this.base2 = data().deepCopy(fields()[7].schema(), other.base2);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.base3)) {
        this.base3 = data().deepCopy(fields()[8].schema(), other.base3);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.base4)) {
        this.base4 = data().deepCopy(fields()[9].schema(), other.base4);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.base5)) {
        this.base5 = data().deepCopy(fields()[10].schema(), other.base5);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.base6)) {
        this.base6 = data().deepCopy(fields()[11].schema(), other.base6);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.base7)) {
        this.base7 = data().deepCopy(fields()[12].schema(), other.base7);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.base8)) {
        this.base8 = data().deepCopy(fields()[13].schema(), other.base8);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.base9)) {
        this.base9 = data().deepCopy(fields()[14].schema(), other.base9);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.base10)) {
        this.base10 = data().deepCopy(fields()[15].schema(), other.base10);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.super1)) {
        this.super1 = data().deepCopy(fields()[16].schema(), other.super1);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.super2)) {
        this.super2 = data().deepCopy(fields()[17].schema(), other.super2);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.super3)) {
        this.super3 = data().deepCopy(fields()[18].schema(), other.super3);
        fieldSetFlags()[18] = true;
      }
    }

    /**
      * Gets the value of the 'act1' field.
      * @return The value.
      */
    public java.lang.CharSequence getAct1() {
      return act1;
    }

    /**
      * Sets the value of the 'act1' field.
      * @param value The value of 'act1'.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder setAct1(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.act1 = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'act1' field has been set.
      * @return True if the 'act1' field has been set, false otherwise.
      */
    public boolean hasAct1() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'act1' field.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder clearAct1() {
      act1 = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'act2' field.
      * @return The value.
      */
    public java.lang.CharSequence getAct2() {
      return act2;
    }

    /**
      * Sets the value of the 'act2' field.
      * @param value The value of 'act2'.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder setAct2(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.act2 = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'act2' field has been set.
      * @return True if the 'act2' field has been set, false otherwise.
      */
    public boolean hasAct2() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'act2' field.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder clearAct2() {
      act2 = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'act3' field.
      * @return The value.
      */
    public java.lang.CharSequence getAct3() {
      return act3;
    }

    /**
      * Sets the value of the 'act3' field.
      * @param value The value of 'act3'.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder setAct3(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.act3 = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'act3' field has been set.
      * @return True if the 'act3' field has been set, false otherwise.
      */
    public boolean hasAct3() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'act3' field.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder clearAct3() {
      act3 = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'act4' field.
      * @return The value.
      */
    public org.joda.time.DateTime getAct4() {
      return act4;
    }

    /**
      * Sets the value of the 'act4' field.
      * @param value The value of 'act4'.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder setAct4(org.joda.time.DateTime value) {
      validate(fields()[3], value);
      this.act4 = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'act4' field has been set.
      * @return True if the 'act4' field has been set, false otherwise.
      */
    public boolean hasAct4() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'act4' field.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder clearAct4() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'composition' field.
      * @return The value.
      */
    public com.dj.model.avro.CompositionAvro getComposition() {
      return composition;
    }

    /**
      * Sets the value of the 'composition' field.
      * @param value The value of 'composition'.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder setComposition(com.dj.model.avro.CompositionAvro value) {
      validate(fields()[4], value);
      this.compositionBuilder = null;
      this.composition = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'composition' field has been set.
      * @return True if the 'composition' field has been set, false otherwise.
      */
    public boolean hasComposition() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'composition' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.dj.model.avro.CompositionAvro.Builder getCompositionBuilder() {
      if (compositionBuilder == null) {
        if (hasComposition()) {
          setCompositionBuilder(com.dj.model.avro.CompositionAvro.newBuilder(composition));
        } else {
          setCompositionBuilder(com.dj.model.avro.CompositionAvro.newBuilder());
        }
      }
      return compositionBuilder;
    }

    /**
     * Sets the Builder instance for the 'composition' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.dj.model.avro.ActualAvro.Builder setCompositionBuilder(com.dj.model.avro.CompositionAvro.Builder value) {
      clearComposition();
      compositionBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'composition' field has an active Builder instance
     * @return True if the 'composition' field has an active Builder instance
     */
    public boolean hasCompositionBuilder() {
      return compositionBuilder != null;
    }

    /**
      * Clears the value of the 'composition' field.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder clearComposition() {
      composition = null;
      compositionBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'compositions' field.
      * @return The value.
      */
    public java.util.List<com.dj.model.avro.CompositionAvro> getCompositions() {
      return compositions;
    }

    /**
      * Sets the value of the 'compositions' field.
      * @param value The value of 'compositions'.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder setCompositions(java.util.List<com.dj.model.avro.CompositionAvro> value) {
      validate(fields()[5], value);
      this.compositions = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'compositions' field has been set.
      * @return True if the 'compositions' field has been set, false otherwise.
      */
    public boolean hasCompositions() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'compositions' field.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder clearCompositions() {
      compositions = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'base1' field.
      * @return The value.
      */
    public java.lang.CharSequence getBase1() {
      return base1;
    }

    /**
      * Sets the value of the 'base1' field.
      * @param value The value of 'base1'.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder setBase1(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.base1 = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'base1' field has been set.
      * @return True if the 'base1' field has been set, false otherwise.
      */
    public boolean hasBase1() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'base1' field.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder clearBase1() {
      base1 = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'base2' field.
      * @return The value.
      */
    public java.lang.Integer getBase2() {
      return base2;
    }

    /**
      * Sets the value of the 'base2' field.
      * @param value The value of 'base2'.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder setBase2(int value) {
      validate(fields()[7], value);
      this.base2 = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'base2' field has been set.
      * @return True if the 'base2' field has been set, false otherwise.
      */
    public boolean hasBase2() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'base2' field.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder clearBase2() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'base3' field.
      * @return The value.
      */
    public java.lang.Long getBase3() {
      return base3;
    }

    /**
      * Sets the value of the 'base3' field.
      * @param value The value of 'base3'.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder setBase3(long value) {
      validate(fields()[8], value);
      this.base3 = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'base3' field has been set.
      * @return True if the 'base3' field has been set, false otherwise.
      */
    public boolean hasBase3() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'base3' field.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder clearBase3() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'base4' field.
      * @return The value.
      */
    public java.lang.Double getBase4() {
      return base4;
    }

    /**
      * Sets the value of the 'base4' field.
      * @param value The value of 'base4'.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder setBase4(double value) {
      validate(fields()[9], value);
      this.base4 = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'base4' field has been set.
      * @return True if the 'base4' field has been set, false otherwise.
      */
    public boolean hasBase4() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'base4' field.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder clearBase4() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'base5' field.
      * @return The value.
      */
    public java.lang.Float getBase5() {
      return base5;
    }

    /**
      * Sets the value of the 'base5' field.
      * @param value The value of 'base5'.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder setBase5(float value) {
      validate(fields()[10], value);
      this.base5 = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'base5' field has been set.
      * @return True if the 'base5' field has been set, false otherwise.
      */
    public boolean hasBase5() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'base5' field.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder clearBase5() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'base6' field.
      * @return The value.
      */
    public java.lang.Boolean getBase6() {
      return base6;
    }

    /**
      * Sets the value of the 'base6' field.
      * @param value The value of 'base6'.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder setBase6(boolean value) {
      validate(fields()[11], value);
      this.base6 = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'base6' field has been set.
      * @return True if the 'base6' field has been set, false otherwise.
      */
    public boolean hasBase6() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'base6' field.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder clearBase6() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'base7' field.
      * @return The value.
      */
    public java.lang.Integer getBase7() {
      return base7;
    }

    /**
      * Sets the value of the 'base7' field.
      * @param value The value of 'base7'.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder setBase7(int value) {
      validate(fields()[12], value);
      this.base7 = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'base7' field has been set.
      * @return True if the 'base7' field has been set, false otherwise.
      */
    public boolean hasBase7() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'base7' field.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder clearBase7() {
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'base8' field.
      * @return The value.
      */
    public java.lang.Long getBase8() {
      return base8;
    }

    /**
      * Sets the value of the 'base8' field.
      * @param value The value of 'base8'.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder setBase8(long value) {
      validate(fields()[13], value);
      this.base8 = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'base8' field has been set.
      * @return True if the 'base8' field has been set, false otherwise.
      */
    public boolean hasBase8() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'base8' field.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder clearBase8() {
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'base9' field.
      * @return The value.
      */
    public java.lang.Float getBase9() {
      return base9;
    }

    /**
      * Sets the value of the 'base9' field.
      * @param value The value of 'base9'.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder setBase9(float value) {
      validate(fields()[14], value);
      this.base9 = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'base9' field has been set.
      * @return True if the 'base9' field has been set, false otherwise.
      */
    public boolean hasBase9() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'base9' field.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder clearBase9() {
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'base10' field.
      * @return The value.
      */
    public java.lang.Double getBase10() {
      return base10;
    }

    /**
      * Sets the value of the 'base10' field.
      * @param value The value of 'base10'.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder setBase10(double value) {
      validate(fields()[15], value);
      this.base10 = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'base10' field has been set.
      * @return True if the 'base10' field has been set, false otherwise.
      */
    public boolean hasBase10() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'base10' field.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder clearBase10() {
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'super1' field.
      * @return The value.
      */
    public java.lang.CharSequence getSuper1() {
      return super1;
    }

    /**
      * Sets the value of the 'super1' field.
      * @param value The value of 'super1'.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder setSuper1(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.super1 = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'super1' field has been set.
      * @return True if the 'super1' field has been set, false otherwise.
      */
    public boolean hasSuper1() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'super1' field.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder clearSuper1() {
      super1 = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'super2' field.
      * @return The value.
      */
    public java.lang.CharSequence getSuper2() {
      return super2;
    }

    /**
      * Sets the value of the 'super2' field.
      * @param value The value of 'super2'.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder setSuper2(java.lang.CharSequence value) {
      validate(fields()[17], value);
      this.super2 = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'super2' field has been set.
      * @return True if the 'super2' field has been set, false otherwise.
      */
    public boolean hasSuper2() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'super2' field.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder clearSuper2() {
      super2 = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'super3' field.
      * @return The value.
      */
    public java.lang.CharSequence getSuper3() {
      return super3;
    }

    /**
      * Sets the value of the 'super3' field.
      * @param value The value of 'super3'.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder setSuper3(java.lang.CharSequence value) {
      validate(fields()[18], value);
      this.super3 = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'super3' field has been set.
      * @return True if the 'super3' field has been set, false otherwise.
      */
    public boolean hasSuper3() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'super3' field.
      * @return This builder.
      */
    public com.dj.model.avro.ActualAvro.Builder clearSuper3() {
      super3 = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ActualAvro build() {
      try {
        ActualAvro record = new ActualAvro();
        record.act1 = fieldSetFlags()[0] ? this.act1 : (java.lang.CharSequence) defaultValue(fields()[0], record.getConversion(0));
        record.act2 = fieldSetFlags()[1] ? this.act2 : (java.lang.CharSequence) defaultValue(fields()[1], record.getConversion(1));
        record.act3 = fieldSetFlags()[2] ? this.act3 : (java.lang.CharSequence) defaultValue(fields()[2], record.getConversion(2));
        record.act4 = fieldSetFlags()[3] ? this.act4 : (org.joda.time.DateTime) defaultValue(fields()[3], record.getConversion(3));
        if (compositionBuilder != null) {
          record.composition = this.compositionBuilder.build();
        } else {
          record.composition = fieldSetFlags()[4] ? this.composition : (com.dj.model.avro.CompositionAvro) defaultValue(fields()[4], record.getConversion(4));
        }
        record.compositions = fieldSetFlags()[5] ? this.compositions : (java.util.List<com.dj.model.avro.CompositionAvro>) defaultValue(fields()[5], record.getConversion(5));
        record.base1 = fieldSetFlags()[6] ? this.base1 : (java.lang.CharSequence) defaultValue(fields()[6], record.getConversion(6));
        record.base2 = fieldSetFlags()[7] ? this.base2 : (java.lang.Integer) defaultValue(fields()[7], record.getConversion(7));
        record.base3 = fieldSetFlags()[8] ? this.base3 : (java.lang.Long) defaultValue(fields()[8], record.getConversion(8));
        record.base4 = fieldSetFlags()[9] ? this.base4 : (java.lang.Double) defaultValue(fields()[9], record.getConversion(9));
        record.base5 = fieldSetFlags()[10] ? this.base5 : (java.lang.Float) defaultValue(fields()[10], record.getConversion(10));
        record.base6 = fieldSetFlags()[11] ? this.base6 : (java.lang.Boolean) defaultValue(fields()[11], record.getConversion(11));
        record.base7 = fieldSetFlags()[12] ? this.base7 : (java.lang.Integer) defaultValue(fields()[12], record.getConversion(12));
        record.base8 = fieldSetFlags()[13] ? this.base8 : (java.lang.Long) defaultValue(fields()[13], record.getConversion(13));
        record.base9 = fieldSetFlags()[14] ? this.base9 : (java.lang.Float) defaultValue(fields()[14], record.getConversion(14));
        record.base10 = fieldSetFlags()[15] ? this.base10 : (java.lang.Double) defaultValue(fields()[15], record.getConversion(15));
        record.super1 = fieldSetFlags()[16] ? this.super1 : (java.lang.CharSequence) defaultValue(fields()[16], record.getConversion(16));
        record.super2 = fieldSetFlags()[17] ? this.super2 : (java.lang.CharSequence) defaultValue(fields()[17], record.getConversion(17));
        record.super3 = fieldSetFlags()[18] ? this.super3 : (java.lang.CharSequence) defaultValue(fields()[18], record.getConversion(18));
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ActualAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<ActualAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ActualAvro>
    READER$ = (org.apache.avro.io.DatumReader<ActualAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
